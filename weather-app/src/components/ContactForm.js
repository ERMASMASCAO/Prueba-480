import React, { useState } from 'react';
import './ContactForm.css';

/**
 * ContactForm Component
 * 
 * This component renders a contact form with fields for name, birthdate, city, email, and phone number.
 * The form includes validation to ensure all fields are filled before allowing submission.
 */
function ContactForm() {
  /**
   * formData - State object to hold the values of the form fields.
   * setFormData - Function to update the formData state.
   * 
   * The formData state is initialized with empty strings for each field.
   */
  const [formData, setFormData] = useState({
    name: '',
    birthdate: '',
    city: '',
    email: '',
    phone: '',
  });

  /**
   * handleChange - Event handler for form inputs.
   * 
   * Updates the corresponding field in the formData state whenever the user types in an input field.
   * 
   * @param {Object} e - The event object generated by the input change.
   */
  const handleChange = (e) => {
    setFormData({ ...formData, [e.target.name]: e.target.value });
  };

  /**
   * isFormValid - Function to validate the form.
   * 
   * Checks if all form fields are filled by ensuring none of the formData values are empty strings.
   * 
   * @returns {boolean} - Returns true if all fields are filled, otherwise false.
   */
  const isFormValid = () => {
    return Object.values(formData).every(value => value.trim() !== '');
  };

  return (
    <div className="contact-form-container">
      <h2>Contact Form</h2>
      <form>
        <label>
          Name:
          <input type="text" name="name" value={formData.name} onChange={handleChange} required />
        </label>
        <label>
          Birthdate:
          <input type="date" name="birthdate" value={formData.birthdate} onChange={handleChange} required />
        </label>
        <label>
          City:
          <input type="text" name="city" value={formData.city} onChange={handleChange} required />
        </label>
        <label>
          Email:
          <input type="email" name="email" value={formData.email} onChange={handleChange} required />
        </label>
        <label>
          Phone:
          <input type="tel" name="phone" value={formData.phone} onChange={handleChange} required />
        </label>
        <button type="submit" disabled={!isFormValid()}>Send</button>
      </form>
    </div>
  );
}

export default ContactForm;
